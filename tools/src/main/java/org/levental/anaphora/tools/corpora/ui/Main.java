package org.levental.anaphora.tools.corpora.ui;

import org.levental.anaphora.tools.corpora.Launcher;
import org.levental.anaphora.tools.corpora.action.NavigationCallback;
import org.levental.anaphora.tools.corpora.action.NavigationListener;

import javax.swing.*;
import java.awt.*;
import java.io.File;

import static java.lang.String.valueOf;

public class Main extends JFrame implements NavigationCallback {
    private JPanel main;
    private JButton saveButton;
    private JButton nextButton;
    private JButton previousButton;

    public static Main init(Launcher.Options cfg) {
        Main form = new Main();
        Dimension s = Toolkit.getDefaultToolkit().getScreenSize();
        form.setBounds(0, 0, s.width, s.height);
        form.setVisible(true);
        form.add(form.main);
        form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        registerEvents(form, cfg);
        return form;
    }

    private static void registerEvents(Main form, Launcher.Options cfg) {
        NavigationListener listener = new NavigationListener(cfg, form);
        form.saveButton.setActionCommand(valueOf(NavigationListener.CMD_SAVE));
        form.saveButton.addActionListener(listener);
        form.nextButton.setActionCommand(valueOf(NavigationListener.CMD_NEXT));
        form.nextButton.addActionListener(listener);
        form.previousButton.setActionCommand(valueOf(NavigationListener.CMD_PREVIOUS));
        form.previousButton.addActionListener(listener);
    }

    @Override
    public void fileOpened(File name) {

    }

    @Override
    public void fileSaved(File name) {

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        main = new JPanel();
        main.setLayout(new BorderLayout(0, 0));
        final JToolBar toolBar1 = new JToolBar();
        main.add(toolBar1, BorderLayout.NORTH);
        saveButton = new JButton();
        saveButton.setIcon(new ImageIcon(getClass().getResource("/img/save.png")));
        saveButton.setOpaque(false);
        saveButton.setText("");
        saveButton.setToolTipText("save");
        toolBar1.add(saveButton);
        previousButton = new JButton();
        previousButton.setIcon(new ImageIcon(getClass().getResource("/img/up.png")));
        previousButton.setText("");
        previousButton.setToolTipText("previous");
        toolBar1.add(previousButton);
        nextButton = new JButton();
        nextButton.setIcon(new ImageIcon(getClass().getResource("/img/down.png")));
        nextButton.setText("");
        nextButton.setToolTipText("find next");
        toolBar1.add(nextButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return main;
    }
}
